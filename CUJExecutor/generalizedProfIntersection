#!/usr/bin/env bash


#INPUT: any number of .prof files stored locally
#OUTPUT: a new .prof catted to stdout (whose class/object dump is the intersection of the dumps of all passed profiles)


PROF_DUMP="/tmp/profileIntersection_prof_dump.txt"
INTERSECTION_DUMP="/tmp/profileIntersection_intersection_dump.txt"
TEMP_INTERSECTION_DUMP="/tmp/profileIntersection_temp_intersection_dump.txt"
INTERSECTION_PROF="/tmp/profileIntersection_intersection.prof"


MAPS_PACKAGE="com.google.android.apps.maps"
APK_LOCATION=$(adb shell "ls /data/app/${MAPS_PACKAGE}*/base.apk")

FIRST="true"
echo -n "" > $INTERSECTION_DUMP
for PROF in "$@"
do
	./profileToDump $PROF > $PROF_DUMP

	# Tests have shown that there are three function tags with increasing levels of priority (i.e. if my function is tagged with several of these, the highest prioity one will stay when we compile the app).
	# Thus, we add all lower versions of the method so the intersection will include the lowest priority for each function, over all passed profiles
	grep '^HSPL' $PROF_DUMP | sed 's/^HSPL/HPL/' >> $PROF_DUMP 
	grep '^HPL' $PROF_DUMP | sed 's/^HPL/PL/' >> $PROF_DUMP 
	
#Sort PROF_DUMP
	sort -o $PROF_DUMP $PROF_DUMP 

	#If the intersection dump is empty, set it to be this dump. Otherwise, set it to be the intersection of the current intersection with this dump
	if [ $FIRST = "true" ]
	then
		FIRST="false"
		cat $PROF_DUMP >> $INTERSECTION_DUMP
	else
		comm --check-order -12 $INTERSECTION_DUMP $PROF_DUMP > $TEMP_INTERSECTION_DUMP
		cat $TEMP_INTERSECTION_DUMP > $INTERSECTION_DUMP
	fi
done


./dumpToProfile $INTERSECTION_DUMP

