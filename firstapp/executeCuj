#!/usr/bin/env bash

INPUT_FILE=${1:-input.txt}
PRE_CUJ=$(sed '1q;d' $INPUT_FILE)
POST_CUJ=$(sed '2q;d' $INPUT_FILE)
NUM=$(sed '3q;d' $INPUT_FILE)
RECORD=$(sed '4q;d' $INPUT_FILE)
if [ "$RECORD" != "r" ] 
then 
	RECORD="n"
fi

#use escape char to allow special characters (which would terminate the argument in the am instrument command or do other undesirable things).
SpecialChars=(";"  "'" "&" "%" "(" ")" "^")
for char in ${SpecialChars[@]}; do
	exp="\\${char}"
	echo $char
	echo $exp
	PRE_CUJ=${PRE_CUJ//$exp/\\$char}
	POST_CUJ=${POST_CUJ//$exp/\\$char}
done
# Wrap strings in \" to allow for spaces within them. 
PRE_CUJ="\\\"$PRE_CUJ\\\""
POST_CUJ="\\\"$POST_CUJ\\\""

adb logcat -c

./gradlew installDebugAndroidTest

if [ "$RECORD" = "r" ] 
then 
	RECSTART=$(( $(adb shell date '+%s%N') / 1000000))
	adb shell "screenrecord /sdcard/test.mp4" &
	PID=$!
fi 

cmd="adb shell am instrument -w -e class com.example.firstapp.UserCujTest -e pre $PRE_CUJ -e post $POST_CUJ -e iters $NUM -e rec $RECORD com.example.firstapp.test/androidx.test.runner.AndroidJUnitRunner"
eval $cmd

if [ "$RECORD" = "r" ] 
then 
	kill $PID 
	adb pull sdcard/test.mp4 
	adb pull sdcard/test.mp4  #for some reason, the first pull sometimes doesn't always get the "moov" atom, which we need. Pulling twice seems to always do the trick...
	CUJSTART=$(adb logcat -s "clip_start" -v raw -d | sed -n -e '/^1/p')
	CUJEND=$(adb logcat -s "clip_end" -v raw -d | sed -n -e '/^1/p')
	CUTAT=$((CUJSTART - RECSTART - 1000)) 
	LENGTH=$((CUJEND - RECSTART + 1000)) 
	./formatTime "$CUTAT"	
	CUTATFORMAT=$(cat time.txt)
	./formatTime "$LENGTH"	
	LENGTHFORMAT=$(cat time.txt)
	#forces key frames at the positions at which we'd like to cut, then makes cuts at those positions and dumps output in clip0.mp4, clip1.mp4, clip2.mp4
	cmd="ffmpeg -i test.mp4 -force_key_frames:v $CUTATFORMAT,$LENGTHFORMAT -acodec copy -map 0 -f segment -segment_times $CUTATFORMAT,$LENGTHFORMAT -reset_timestamps 1 -y clip%d.mp4"
	eval $cmd
fi 


echo "----------------------------------------------" > action_time_stamps.txt
echo "ACTION DURATIONS:" >> action_time_stamps.txt
echo "" >> action_time_stamps.txt
(adb logcat -s "iterations-actions" -v raw -d | sed -n -e '/^ITERATION/p') >> action_time_stamps.txt
echo "" >> action_time_stamps.txt
(adb logcat -s "averages-actions" -v raw -d | sed -n -e '/^AVERAGE/p') >> action_time_stamps.txt
echo "" >> action_time_stamps.txt
echo "----------------------------------------------" >> action_time_stamps.txt
echo "TIME STAMPS:" >> action_time_stamps.txt
echo "" >> action_time_stamps.txt
(adb logcat -s "iterations-stamps" -v raw -d | sed -n -e '/^ITERATION/p') >> action_time_stamps.txt
echo "" >> action_time_stamps.txt
(adb logcat -s "averages-stamps" -v raw -d | sed -n -e '/^AVERAGE/p') >> action_time_stamps.txt
echo "" >> action_time_stamps.txt
echo "----------------------------------------------" >> action_time_stamps.txt
echo "MEDIAN:" >> action_time_stamps.txt
echo "" >> action_time_stamps.txt
(adb logcat -s "median" -v raw -d | sed -n -e '/^MEDIAN/p') >> action_time_stamps.txt

cat action_time_stamps.txt

